/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.github.mauriceliddy;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

public class App {

  private static final Logger logger = LogManager.getLogger(App.class);
  public static Scanner scanEntry = new Scanner(System.in);
  public static Scanner scanSql = new Scanner(System.in);

  public static void main(String[] args) throws Exception {

    logger.info("User entered the application, looking for a workout buddy...");
    DataInput dataInput = new DataInput();
    UserDatabaseAccess userDatabaseAccess = new UserDatabaseAccess();
    List<Workout> masterList = dataInput.readInData();
  
    System.out.println("<************************************************************>");

    // User Input
    System.out.print("Hello! On what day would you like to run? ");
    String day = null;
    day = scanEntry.next();

    System.out.println("Hello! What type of workout are you looking for?");
    System.out.println("Select 1 for distance");
    System.out.println("Select 2 for vertical gain");
    System.out.println("Select 3 for time");
    int choice = scanEntry.nextInt();

    //Send day and workout choice to be processed
    ProcessData processData = new ProcessData(masterList);
    processData.processChoice(day, choice);

    // Database entry section:
    userDatabaseAccess.clearAllTables();
    System.out.println();
    System.out.println("Would you like to store data into the database? y or n?");
    String response;
    response = scanSql.nextLine();
    if (response.equals("y")) {
      logger.info("User has requested data to be entered and stored into the database:");
      userDatabaseAccess.sendCSVDataToDatabase(masterList);

      // Retrieve all Data back from Database with updated Athlete and Workout Ids
      System.out.println();
      System.out.println("Database data printing...");
      List<Workout> woutFromDB = new ArrayList<>();
      woutFromDB = userDatabaseAccess.retrieveAllFromDb();
      woutFromDB.forEach(wout -> wout.printWorkoutDataFromDB());

      // Finally, who are all the athletes?
      // Query Database
      List<Athlete> athleteListFromDB = new ArrayList<>();
      athleteListFromDB = userDatabaseAccess.retrieveAthletesFromDb();
      System.out.println();
      System.out.println("Printing list of athletes from Database: ");
      athleteListFromDB.forEach(ath -> System.out.println(ath));

    }
    else{
      logger.info("User has decided to not save data to the database and hence database is empty");
    }

    System.out.println("Exiting Program");

  }
}
